services:
  # etcd for APISIX configuration storage
  etcd:
    image: gcr.io/etcd-development/etcd:v3.5.5
    container_name: etcd
    command:
      - /usr/local/bin/etcd
      - --name=etcd
      - --data-dir=/etcd-data
      - --listen-client-urls=http://0.0.0.0:2379
      - --advertise-client-urls=http://etcd:2379
      - --listen-peer-urls=http://0.0.0.0:2380
      - --initial-advertise-peer-urls=http://etcd:2380
      - --initial-cluster=etcd=http://etcd:2380
      - --initial-cluster-token=etcd-cluster
      - --initial-cluster-state=new
    volumes:
      - etcd_data:/etcd-data
    ports:
      - "2379:2379"
      - "2380:2380"
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - apisix-network

  # Apache APISIX API Gateway
  apisix:
    image: apache/apisix:2.15.0-alpine
    container_name: apisix
    restart: unless-stopped
    volumes:
      - ./apisix/config.yaml:/usr/local/apisix/conf/config.yaml:ro
    depends_on:
      etcd:
        condition: service_healthy
    ports:
      - "9080:9080"
      - "9092:9092"
      - "9443:9443"
    networks:
      - apisix-network

  # MariaDB Database
  mariadb:
    image: mariadb:10.9
    container_name: mariadb
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=apiapp
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    ports:
      - "3307:3306"
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./mariadb/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - apisix-network

  # GoFiber Backend
  gofiber-backend:
    build:
      context: ./gofiber-backend
      dockerfile: Dockerfile
    container_name: gofiber-backend
    depends_on:
      mariadb:
        condition: service_healthy
    environment:
      - DB_HOST=mariadb
      - DB_PORT=3306
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=apiapp
    ports:
      - "8080:8080"
    networks:
      - apisix-network

  # WordPress API Provider
  wordpress-db:
    image: mysql:8.0
    container_name: wordpress-db
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${WORDPRESS_DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=wordpress
      - MYSQL_USER=${WORDPRESS_DB_USER}
      - MYSQL_PASSWORD=${WORDPRESS_DB_PASSWORD}
      - MYSQL_INITDB_SKIP_TZINFO=1
    volumes:
      - wordpress_db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - apisix-network

  wordpress:
    image: wordpress:6.3-apache
    container_name: wordpress
    restart: unless-stopped
    depends_on:
      wordpress-db:
        condition: service_healthy
    environment:
      - WORDPRESS_DB_HOST=wordpress-db:3306
      - WORDPRESS_DB_USER=${WORDPRESS_DB_USER}
      - WORDPRESS_DB_PASSWORD=${WORDPRESS_DB_PASSWORD}
      - WORDPRESS_DB_NAME=wordpress
      - WORDPRESS_CONFIG_EXTRA=
        define('WP_REST_API_LOG_REQUESTS', true);
        define('WP_DEBUG', false);
        define('WP_SITEURL', 'http://localhost:8081');
        define('WP_HOME', 'http://localhost:8081');
        define('DISABLE_WP_CRON', true);
        define('WP_REWRITE_RULES', true);
    ports:
      - "8081:80"
    volumes:
      - wordpress_data:/var/www/html
    networks:
      - apisix-network

  # React Custom Dashboard
  react-dashboard:
    build:
      context: ./react-dashboard
      dockerfile: Dockerfile
    container_name: react-dashboard
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_APISIX_ADMIN_URL=http://localhost:9092
      - REACT_APP_APISIX_ADMIN_KEY=${APISIX_ADMIN_KEY}
    networks:
      - apisix-network

volumes:
  mariadb_data:
  wordpress_db_data:
  wordpress_data:
  etcd_data:

networks:
  apisix-network:
    driver: bridge
